'1-->__iter__'

class Fib(object):
	def __init__(self):
		self.a,self.b=0,1
	
	def __iter__(self):
		return self
	
	def __next__(self):
		self.a,self.b=self.b,self.a+self.b
		if self.a>10000:#退出循环
			raise StopIteration()
		return self.a

for n in Fib():
	print(n)
	

'2-->__getitem__'

class Fib(object):
	def __getitem__(self,n):
		a,b=1,1
		for x in range(n):
			a,b=a+b,a
		return a

print(Fib()[3])

'3-->__getitem__'

class Fib(object):
	def __getitem__(self,n):
		if isinstance(n,int):
			a,b=1,1
			for x in range(n-2):
				a,b=a+b,a
			return a
		
		if isinstance(n,slice):
			start=n.start
			stop =n.stop
			if start is None:
				start=0
			a,b=1,1
			L=[]
			for x in range(stop):
				if x>=start:
					L.append(a)
				a,b=b,a+b
			return L

print(Fib()[3])
